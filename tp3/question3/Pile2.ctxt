#BlueJ class context
comment0.target=class\ Pile2
comment1.params=
comment1.target=T\ d\u00E9piler()
comment10.params=
comment10.target=Pile2()
comment11.params=
comment11.target=boolean\ estPleine()
comment11.text=Effectue\ un\ test\ de\ l'\u00E9tat\ de\ la\ pile.\n@return\ vrai\ si\ la\ pile\ est\ pleine,\ faux\ autrement\n\n
comment12.target=stk
comment12.text=par\ d\u00E9l\u00E9gation\ \:\ utilisation\ de\ la\ class\ Stack\ \n
comment2.params=
comment2.target=String\ toString()
comment2.text=Retourne\ une\ repr\u00E9sentation\ en\ String\ d'une\ pile,\ \ncontenant\ la\ repr\u00E9sentation\ en\ String\ de\ chaque\ \u00E9l\u00E9ment.\n@return\ une\ repr\u00E9sentation\ en\ String\ d'une\ pile\n\n
comment3.target=capacit\u00E9
comment3.text=la\ capcit\u00E9\ de\ la\ pile\ \n
comment4.params=
comment4.target=int\ capacit\u00E9()
comment4.text=Retourne\ le\ nombre\ d'\u00E9l\u00E9ment\ d'une\ pile.\n@return\ le\ nombre\ d'\u00E9l\u00E9ment\n\n
comment5.params=
comment5.target=int\ taille()
comment5.text=Retourne\ le\ nombre\ d'\u00E9l\u00E9ment\ d'une\ pile.\n@return\ le\ nombre\ d'\u00E9l\u00E9ment\n\n
comment6.params=
comment6.target=boolean\ estVide()
comment6.text=Effectue\ un\ test\ de\ l'\u00E9tat\ de\ la\ pile.\n@return\ vrai\ si\ la\ pile\ est\ vide,\ faux\ autrement\n\n
comment7.params=o
comment7.target=void\ empiler(T)
comment8.params=
comment8.target=T\ sommet()
comment9.params=taille
comment9.target=Pile2(int)
comment9.text=Cr\u00E9ation\ d'une\ pile.\n@param\ taille\ la\ taille\ de\ la\ pile,\ la\ taille\ doit\ \u00EAtre\ >\ 0\n\n
numComments=13
 
